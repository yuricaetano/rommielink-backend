generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  nome String
  email String @unique
  senha String
  telefone String
  dataNascimento String
  dataCriacao DateTime @default(now()) //dataCadastro
  updatedAt DateTime @updatedAt
  nomeUsuario String @unique
  estudante Estudante?
  anunciante Anunciante?
}

model Estudante {
  id String @id @default(uuid())
  tipoQuarto String
  valorMaximoAluguel Float
  periodoMaximoLocacao String
  peridoMinimoLocacao String
  fotoPerfil String
  sexo String
  instituicao String @default("")
  curso String @default("")
  matricula String @default("")
  userId String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  preferencias Preferencias[]
}

model Preferencias {
  id String @id @default(uuid())
  fumante Boolean
  possuiAnimal Boolean
  proximidades Proximidades[]
  caracteristicas String
  estudanteId String
  estudante Estudante @relation(fields: [estudanteId], references: [id], onDelete: Cascade)
}

model Anunciante {
  id String @id @default(uuid())
  userId String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  imovel Imovel[]
}

model Imovel {
  id String @id @default(uuid())
  tipoImovel String
  status String
  valorAluguel Float
  dataCriacao DateTime @default(now())
  periodoMaximoLocacao String
  periodoMinimoLocacao String
  descricao String
  fotoImovel String
  anuncianteId String
  anunciante Anunciante @relation(fields: [anuncianteId], references: [id], onDelete: Cascade)
  proximidades Proximidades[]
  endereco Endereco?
}

model Proximidades {
  id String @id @default(uuid())
  universidade Boolean
  academia Boolean
  hospital Boolean
  farmacia Boolean
  mercado Boolean
  shopping Boolean
  postoGasolina Boolean
  agenciaBancaria Boolean
  pontoOnibus Boolean
  estacaoMetro Boolean
  imovelId String
  preferenciaId String
  imovel Imovel @relation(fields: [imovelId], references: [id], onDelete: Cascade)
  preferencia Preferencias @relation(fields: [preferenciaId], references: [id], onDelete: Cascade)
}

model Endereco{
  id String @id @default(uuid())
  cep String
  logradouro String
  numero String
  complemento String
  bairro String
  cidade String
  estado String
  pais String
  imovelId String @unique
  imovel Imovel @relation(fields: [imovelId], references: [id], onDelete: Cascade)
}